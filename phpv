#!/usr/bin/env bash

# ------------------------------------------  FUNCTIONS AND CONSTANTS --------------------------------------------------

readonly COLOR_BLACK=0
readonly COLOR_RED=1
readonly COLOR_GREEN=2
readonly COLOR_YELLOW=3
readonly COLOR_BLUE=4
readonly COLOR_MAGENTA=5
readonly COLOR_CYAN=6
readonly COLOR_WHITE=7


function usage {
    echo "USAGE: "
    echo "     (sudo) phpv [OPTION]"
    echo ""
    echo "Possible options:"
    echo "    -v, v, --version               show current PHP version"
    echo "    -x, -xy, -x.y, x, xy, x.y      switch PHP version to x.y. '.y' is optional."
    echo "Examples:"
    echo "     sudo phpv 5                   will switch to first php5.* found"
    echo "     sudo phpv 71                  will switch to php7.1"
    echo "     sudo phpv -5.6                will switch to php5.6"
    echo ""
}


function availableVersions {
    ACTIVE_APACHE_MODULE_LOAD=`ls -l /etc/apache2/mods-enabled/php*.load | awk '{print $9}' | head -1`
    ACTIVE_PHPVERSION=`echo $ACTIVE_APACHE_MODULE_LOAD | sed -r 's/(.*php)(.*)(.load)/\2/g'`
    AVAILABLE_APACHE_MODULES_LOAD=`ls -l /etc/apache2/mods-available/php*.load | awk '{print $9}' | sort -h`

    echo ""
    textColor $COLOR_GREEN
    echo "[ PHP VERSIONS AVAILABLE ]----------------------------------------------------"
    echo ""
    textColor $COLOR_WHITE

    for i in $AVAILABLE_APACHE_MODULES_LOAD; do
        PHPVERSION=`echo $i | sed -r 's/(.*php)(.*)(.load)/\2/g'`
        textColor $COLOR_GREEN
        if [[ $PHPVERSION == $ACTIVE_PHPVERSION ]]; then
            echo -n " * "
        else
            echo -n "   "
        fi
        textColor $COLOR_BLUE
        echo -n $PHPVERSION
        if [[ $PHPVERSION == $ACTIVE_PHPVERSION ]]; then
            textColor $COLOR_GREEN
            echo -ne "\t<-- ACTIVE"
        else
            textColor $COLOR_MAGENTA
            echo -ne "\tto activate:  "
            textColor $COLOR_WHITE
            echo -n  "(sudo) phpv $PHPVERSION"
        fi
        echo ""
    done
}

function getLoadedApacheModule {
  ACTIVE_APACHE_MODULE_LOAD=`ls -l /etc/apache2/mods-enabled/php*.load | awk '{print $9}' | head -1`
  echo `cat $ACTIVE_APACHE_MODULE_LOAD | grep LoadModule | awk '{print $3}'`
}


function currentVersion {
    ACTIVE_APACHE_MOUDLE=$(getLoadedApacheModule)

    echo ""
    textColor $COLOR_GREEN
    echo "[ CURRENT ACTIVE VERSION DETAILS ]---------------------------------------------"
    echo ""
    textColor $COLOR_WHITE

    textColor $COLOR_BLUE
    echo -n " CLI: "
    textColor $COLOR_WHITE
    echo `php -v | head -1`

    textColor $COLOR_BLUE
    echo -n " APACHE MODULE: "
    textColor $COLOR_WHITE
    echo $ACTIVE_APACHE_MOUDLE
    echo ""
}


function textColor {
    tput setaf $1
}


function textUnderlineOn {
    tput smul
}


function textUnderlineOff {
    tput rmul
}


function stripNonNumbers {
  echo `echo $1 | sed -e 's/[^0-9]//g'`
}

function getVersionFromParameter {
  fullVersion=$(stripNonNumbers $1)
  echo ${fullVersion:0:1}
}

function getSubVersionFromParameter {
  fullVersion=$(stripNonNumbers $1)
  subVersion=${fullVersion:1}
  [[ !  -z  $subVersion  ]] && echo ".$subVersion"
}


# ------------------------------------------------------  MAIN  --------------------------------------------------------


echo ""

if [[ ($1 == "-v") || ($1 == "v") || ($1 == "--version")]]; then
    availableVersions
    currentVersion
    echo ""
    exit 0
fi

if [ $# -eq 0 ]; then
    usage
    exit 0
fi

VERSION_TO_ENABLE=$(getVersionFromParameter $1)
SUBVERSION_TO_ENABLE=$(getSubVersionFromParameter $1)

APACHE_MODULE_MASK="php$VERSION_TO_ENABLE$SUBVERSION_TO_ENABLE*"

CLI_MODULE_PREFIX=/usr/bin/php
CLI_MODULE_MASK="$CLI_MODULE_PREFIX$VERSION_TO_ENABLE$SUBVERSION_TO_ENABLE*"
read -r -a CLI_MODULES <<< `ls -l $CLI_MODULE_MASK 2>/dev/null | awk '{print $9}' | sort -r`
CLI_MODULE=${CLI_MODULES[0]}

if [[ ! -n $CLI_MODULE ]]; then
      textColor $COLOR_RED;    echo -n "[ERROR!!!] CLI module for mask "
      textColor $COLOR_YELLOW; echo -n $CLI_MODULE_MASK
      textColor $COLOR_RED;    echo    " is not found"
      textColor $COLOR_WHITE;
      exit 1
fi

if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root" 1>&2
    exit 1
fi


textUnderlineOn
textColor $COLOR_BLUE;   echo -n "Switching to PHP version "
textColor $COLOR_YELLOW; echo -n "$VERSION_TO_ENABLE$SUBVERSION_TO_ENABLE"
textColor $COLOR_BLUE;   echo    " ..."
textUnderlineOff
textColor $COLOR_WHITE;  echo ""


textUnderlineOn;         echo -n "Switching CLI module to "
textColor $COLOR_YELLOW; echo -n $CLI_MODULE
textColor $COLOR_WHITE;  echo " ..."
textUnderlineOff
update-alternatives --set php $CLI_MODULE
echo ""

textUnderlineOn;         echo -n "Deactivating current APACHE module ... "
textUnderlineOff
a2dismod "php*"
echo ""

textUnderlineOn;         echo -n "Activating APACHE module "
textColor $COLOR_YELLOW; echo -n $APACHE_MODULE_MASK
textColor $COLOR_WHITE;  echo " ..."
textUnderlineOff
a2enmod $APACHE_MODULE_MASK
echo ""

textUnderlineOn;             echo "Restarting APACHE ..."
textUnderlineOff;
service apache2 restart

echo ""
currentVersion
echo ""
